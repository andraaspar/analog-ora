{"version":3,"sources":["AnalogClockComp.module.css","AppComp.module.css","AnalogClockComp.tsx","serviceWorker.ts","index.tsx","AppComp.tsx"],"names":["module","exports","AnalogClockComp","hour","_hour","minuteRatio","_minute","minuteAngle","hourAngle","viewBox","className","styles","clock","cx","cy","r","strokeWidth","stroke","fill","d","strokeLinecap","transform","Array","from","keys","map","index","key","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","useState","$number","set$number","pickHour","$hour","set$hour","pickMinute","$minute","set$minute","getTimeOfDay","$timeOfDay","set$timeOfDay","$hourGiven","set$hourGiven","$minuteGiven","set$minuteGiven","focusableRef","useRef","Math","floor","random","minute","app","onSubmit","e","preventDefault","hourGiven","parseInt","minuteGiven","alert","current","focus","ref","type","min","max","step","value","onChange","target","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.37b65ad4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"AnalogClockComp_clock__11Vnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"AppComp_app__z2Iwd\"};","import React from 'react'\nimport styles from './AnalogClockComp.module.css'\n\nexport interface AnalogClockCompProps {\n\t_hour: number\n\t_minute: number\n}\n\nexport function AnalogClockComp({\n\t_hour: hour,\n\t_minute: minute,\n}: AnalogClockCompProps) {\n\tconst minuteRatio = (minute % 60) / 60\n\tconst minuteAngle = 360 * minuteRatio\n\tconst hourRatio = ((hour % 12) + minuteRatio) / 12\n\tconst hourAngle = 360 * hourRatio\n\treturn (\n\t\t<>\n\t\t\t<svg viewBox='0 0 100 100' className={styles.clock}>\n\t\t\t\t<circle\n\t\t\t\t\tcx={50}\n\t\t\t\t\tcy={50}\n\t\t\t\t\tr={49.5}\n\t\t\t\t\tstrokeWidth={1}\n\t\t\t\t\tstroke='black'\n\t\t\t\t\tfill='white'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\td='m 0,0 l 0,-40'\n\t\t\t\t\tstrokeWidth={5}\n\t\t\t\t\tstroke='black'\n\t\t\t\t\tstrokeLinecap='round'\n\t\t\t\t\ttransform={`translate(50 50) rotate(${minuteAngle})`}\n\t\t\t\t\tfill='black'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\td='m 0,0 l 0,-30'\n\t\t\t\t\tstrokeWidth={5}\n\t\t\t\t\tstroke='black'\n\t\t\t\t\tstrokeLinecap='round'\n\t\t\t\t\ttransform={`translate(50 50) rotate(${hourAngle})`}\n\t\t\t\t\tfill='black'\n\t\t\t\t/>\n\t\t\t\t{Array.from(new Array(60).keys()).map(index => (\n\t\t\t\t\t<path\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\td={`m 0,-49.5 l 0,${index % 5 ? 3 : 5}`}\n\t\t\t\t\t\tstrokeWidth={index % 5 ? 1 : 3}\n\t\t\t\t\t\tstroke='black'\n\t\t\t\t\t\tfill='white'\n\t\t\t\t\t\ttransform={`translate(50 50) rotate(${index * 6})`}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</svg>\n\t\t</>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href,\n\t\t)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppComp } from './AppComp'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<AppComp />, document.getElementById('root'))\n\nserviceWorker.register()\n","import React, { useRef, useState } from 'react'\nimport { AnalogClockComp } from './AnalogClockComp'\nimport styles from './AppComp.module.css'\n\nexport function AppComp() {\n\tconst [$number, set$number] = useState(1)\n\tconst [$hour, set$hour] = useState(pickHour)\n\tconst [$minute, set$minute] = useState(pickMinute)\n\tconst [$timeOfDay, set$timeOfDay] = useState(getTimeOfDay($hour, $minute))\n\tconst [$hourGiven, set$hourGiven] = useState('')\n\tconst [$minuteGiven, set$minuteGiven] = useState('')\n\tconst focusableRef = useRef<HTMLInputElement>(null)\n\n\tfunction pickHour() {\n\t\treturn Math.floor(Math.random() * 24)\n\t}\n\n\tfunction pickMinute() {\n\t\treturn Math.floor(Math.random() * 60)\n\t}\n\n\tfunction onSubmit(e: React.FormEvent) {\n\t\te.preventDefault()\n\t\tconst hourGiven = parseInt($hourGiven, 10)\n\t\tconst minuteGiven = parseInt($minuteGiven, 10)\n\t\tif (hourGiven === $hour && minuteGiven === $minute) {\n\t\t\talert(`Helyes!`)\n\t\t\tset$number($number + 1)\n\t\t\tconst hour = pickHour()\n\t\t\tconst minute = pickMinute()\n\t\t\tset$hour(hour)\n\t\t\tset$minute(minute)\n\t\t\tset$timeOfDay(getTimeOfDay(hour, minute))\n\t\t} else {\n\t\t\talert(`Helytelen.`)\n\t\t}\n\t\tset$hourGiven('')\n\t\tset$minuteGiven('')\n\t\tfocusableRef.current!.focus()\n\t}\n\n\tfunction getTimeOfDay(hour: number, minute: number) {\n\t\tif (hour < 1 && minute < 8) {\n\t\t\treturn 'éjfél'\n\t\t} else if (hour < 6) {\n\t\t\treturn 'hajnali'\n\t\t} else if (hour < 9) {\n\t\t\treturn 'reggel'\n\t\t} else if (hour < 11 || (hour === 11 && minute < 60 - 7)) {\n\t\t\treturn 'délelőtt'\n\t\t} else if (hour < 12 || (hour === 12 && minute < 8)) {\n\t\t\treturn 'dél'\n\t\t} else if (hour < 18) {\n\t\t\treturn 'délután'\n\t\t} else if (hour < 22) {\n\t\t\treturn 'este'\n\t\t} else if (hour < 23 || (hour === 23 && minute < 60 - 7)) {\n\t\t\treturn 'éjjel'\n\t\t} else {\n\t\t\treturn 'éjfél'\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div>\n\t\t\t\t{$number}. <b>{$timeOfDay}</b>\n\t\t\t</div>\n\t\t\t<AnalogClockComp _hour={$hour} _minute={$minute} />\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tref={focusableRef}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={23}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tvalue={$hourGiven}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tset$hourGiven(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{' : '}\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={59}\n\t\t\t\t\tstep={1}\n\t\t\t\t\tvalue={$minuteGiven}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tset$minuteGiven(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>{' '}\n\t\t\t\t<button>Oké</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}